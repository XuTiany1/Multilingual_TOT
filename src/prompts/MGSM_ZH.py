USER_CHAT_TEMPLATE = "<start_of_turn>用户\n{prompt}<end_of_turn><eos>\n"
MODEL_CHAT_TEMPLATE = "<start_of_turn>模型\n"

# standard prompt
standard_prompt = USER_CHAT_TEMPLATE.format(
    prompt="回答以下数学问题。只输入最终答案的数字，不要包含任何其他内容。\n"
) + "{question}\n答案: " + MODEL_CHAT_TEMPLATE

# cot prompt
cot_prompt = USER_CHAT_TEMPLATE.format(
    prompt="回答以下数学问题。"
           "请逐步思考并记录您的推理过程。"
           "最后一行的格式应为“答案是 xxx”，其中 xxx 是一个数字。\n"
) + "问题: {question}\n逐步解答:\n" + MODEL_CHAT_TEMPLATE

# propose_prompt
propose_prompt = USER_CHAT_TEMPLATE.format(
    prompt="想象一下，你由 {n} 位独立的数学家组成，他们使用 {lang} 进行交流，"
           "每位数学家都有自己独特的视角来解决一个多步骤的数学问题。\n\n"
           "每位数学家将提出一个具体的步骤来解决该问题。"
           "该步骤必须包括：\n"
           "- **简明的解释**，说明为什么这个步骤是必要的，以及它如何帮助解决问题。\n"
           "- **清晰的方程** 或 计算，以实现该步骤。\n"
           "- 简要说明下一个逻辑步骤可能是什么。\n\n"
           "每位数学家应以 '思考 i: ' 开始他们的回答，其中 'i' 为 1, 2, ... {n}。\n\n"
           "回答必须 **用一行** 的格式书写：\n\n"
           "数学表达式以计算得出的值结尾。\n\n"
           "'思考 i: 提议。方程: [数学表达式]。下一步: 后续行动。'\n\n"
           "每位数学家应独立地分析问题，并考虑不同的方法或分解方式。\n\n"
           "如果这是第一步，每位数学家将独立决定最佳的起始方式。\n"
           "如果已有上下文，他们将基于当前的思维过程进行构建，确保持续推进。\n\n"
           "该过程将持续进行，直到获得最终答案，每一步都对解法进行优化。\n\n"
) + "---\n" \
    "问题: {question}\n\n" \
    "上下文（之前的思考过程，如果有）:\n{current_thought_process}\n\n" \
    "三位数学家提出的具体步骤:\n" \
    + MODEL_CHAT_TEMPLATE

# value_prompt
value_prompt = USER_CHAT_TEMPLATE.format(
    prompt="评估给定的推理步骤是否对解决问题有意义的贡献。"
           "仅回答 ‘评估: 确定’、‘评估: 可能’ 或 ‘评估: 不可能’。"
           "不要包含解释或任何额外的文本。\n\n"
           "请选择以下判断之一:\n"
           "- 确定: 该步骤正确，并且是通向解决方案的逻辑进展。\n"
           "- 可能: 该步骤是合理的，但可能需要进一步完善或缺少关键信息。\n"
           "- 不可能: 该步骤错误、无关或与已知事实相矛盾。\n\n"
           "---\n"
           "问题: 一列火车从 A 站出发，车上有 50 名乘客。到达下一站时，15 名乘客下车，"
           "30 名新乘客上车。现在火车上有多少名乘客？\n\n"
           "建议的下一步: 计算净变化量：-15 + 30。\n评估: 确定\n\n"
           "建议的下一步: 以方程表达情况：50 - 15 + 30 = x。\n评估: 确定\n\n"
           "建议的下一步: 假设火车在下一站失去了 20 名乘客，并检查总数是否匹配。\n评估: 不可能\n\n"
           "建议的下一步: 以百分比表示关系：(50 - 15) / 50。\n评估: 不可能\n\n"
           "建议的下一步: 考虑在每一站都让乘客数量加倍。\n评估: 不可能\n\n"
           "建议的下一步: 逆向推理，假设最终乘客数为 x，并向后推算。\n评估: 确定\n\n"
           "---\n"
           "问题: 服务器机房最初有 9 台计算机。从周一到周四，每天增加 5 台计算机。"
           "现在服务器机房中共有多少台计算机？\n\n"
           "建议的下一步: 计算总共新增的计算机数量：5 × 4。\n评估: 确定\n\n"
           "建议的下一步: 以算术数列的形式表示变化：9 + (5 × n)，其中 n 是天数。\n评估: 确定\n\n"
           "建议的下一步: 假设计算机被移除而不是添加：9 - (5 × 4)。\n评估: 不可能\n\n"
           "建议的下一步: 将问题转换为比例计算：(9 / 5) × 4。\n评估: 不可能\n\n"
           "建议的下一步: 假设计算机的增长模式是指数增长，而不是线性增加。\n评估: 不可能\n\n"
           "建议的下一步: 反向计算是否仍然得到最初的 9 台计算机。\n评估: 确定\n\n"
) + "---\n" \
    "{question}\n\n" \
    "建议的下一步: {curr_candidate}\n\n" \
    "评估:" \
    + MODEL_CHAT_TEMPLATE

# Force output prompt
force_output_prompt = USER_CHAT_TEMPLATE.format(
    prompt="根据以下上下文，给出问题的最终答案。\n\n"
           "严格遵循以下规则:\n"
           "- 逐步写出方程式，并清晰地解释每一步计算。\n"
           "- 在提供的上下文基础上继续推理，确保每一步都是逻辑的延续。\n"
           "- 不要重复上下文中已经存在的步骤。\n"
           "- 最后一行只提供最终答案的数字，不包含任何其他文本。\n\n"
           "上下文（若有先前的推理过程）:\n"
           "{context}\n\n"
) + "---\n" \
    "问题: {question}\n\n" \
    "解答:\n" \
    "步骤 1: " \
    + MODEL_CHAT_TEMPLATE

# Choose final answer
final_judge_prompt = USER_CHAT_TEMPLATE.format(
    prompt="你是一名数学裁判，负责确定问题的最终答案。\n\n"
           "首先，仔细分析题目。然后，严格审查下面提供的候选答案。\n"
           "比较每个候选答案的推理过程，并确定最准确的最终结果。\n\n"
           "遵循以下规则:\n"
           "- 在做出决定之前，先进行逻辑推理。\n"
           "- 如果有多个正确答案，请选择推理最清晰的一个。\n"
           "- 如果候选答案存在逻辑错误或缺少关键步骤，则不予考虑。\n"
           "- 最终输出应为一个正确的数字，不附加任何解释或额外文本。\n\n"
           "---\n"
           "题目:\n"
           "{question}\n\n"
           "候选答案:\n"
           "{candidate_answers}\n\n"
           "---\n"
           "最终答案: "
) + MODEL_CHAT_TEMPLATE